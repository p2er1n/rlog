#+title: 数据结构-绪论
#+author: Peerin
#+date: <2023-09-04 一 10:04>

* 课程

这门课程一上来给人的感觉就是概念很多，老师念ppt,和课本几乎无差，又是一门重要的水课～

* 数据结构

数据结构包括：逻辑结构、存储结构、和数据的运算。

** 逻辑结构

其中逻辑结构是一种数学模型，一种数学描述，它的定义是：

~数据结构是相互之间存在的一种或多种特定关系的数据元素的集合~

上述定义中的数据结构就是指的逻辑结构。

数据元素就是在当前数据结构中可以被看成整体的基本单位。它不一定是不可分的，它可以包含数据项，后者一般是不可分割的最小单元。

而特定关系有一对一、一对多和多对一等，表明了各个数据元素之间的关系。

根据数据元素之间关系的可以把数据结构（逻辑结构）分成四种：

1. 集合
   各个数据元素之间除了 *同在一个集合* 这个关系之外没有其他关系，是松散的。
2. 线性结构
   各个数据元素之间是 *一对一* 的关系。
   
   o--o--o--o--o

   线性结构包括下面几种具体的数据结构
   2.1 线性表
   2.2 栈、队列
   2.3 串、数组

3. 树型结构
   各个数据元素之间是 *一对多* 的关系。

            o
	    |
	   / \ 
	  o   o
	 / \ / \
	o  o o  o

4. 图状结构或网状结构
   各个数据元素之间是 *多对多* 的关系。
         o--o
   o--o<      >o
         o--o


它可以被表示为一个二元组 (D, S) 分别表示 *数据（Data）* 和 *结构（Structure）*

数据就是一个包含数据元素的集合。

结构则是一个 *关系的集合* ，每个关系则是一个 *有序数对* 的集合。

** 存储结构

存储结构就是逻辑结构如何在计算机上表示，它需要考虑计算机的硬件系统，比如内存和CPU等。

存储结构包括：顺序存储、链式存储

*** 顺序存储

顺序存储是根据数据在计算机内存中的相对位置关系进行存储，每个数据和它周围的数据的位置关系是可以直接计算出来的。

比如连续相接，即数据之间是紧挨着的，每个数据的位置可以直接计算出来：起始位置 + 单个数据的大小 * 当前数据的序号

*** 链式存储

链式存储是通过依靠内存的地址实现的，每个内存中的数据另外包括一个位置来存放下一个数据的地址，这样串成一条链，有单链条，也有双链条。

** 运算

* 抽象数据类型

抽象数据类型也是一种数学模型，与之相对应的是具体的数据类型，也就是高级语言中的数据类型，比如int、float、double等。

我们先看具体的数据类型

** （具体）数据类型

编程语言的具体的数据类型抽象了底层的实现，把数据包装起来变成一个变量，并且定义了这种数据类型可以进行的计算，方便了程序员的使用。

** ADT

/ADT也就是抽象数据类型的英文缩写，用在这里是为了避免和上一级的标题冲突（其实产生冲突意味着我的分类方法不恰当）/

而抽象的数据类型就完全隔离的底层计算机，它不是具体某个编程语言的实现，而是一种数学模型，是一种用来辅助描述数学的工具。

抽象数据类型包括：数据对象、关系和基本操作。

因此，抽象数据类型可以被表示为一个三元组 *(D, S, P)* 可见，和数据结构中的逻辑结构只有一个之差。

其中D和S就和逻辑结构中的一样，不同的是定义了一组操作P。表示这种数据类型可以进行的操作。

抽象数据类型是一种数学描述，可以使用具体的程序设计语言的具体数据类型来进行表示和描述。

也可以将程序设计语言中的数据类型叫做 *固有数据类型* ，因为ADT的涵盖范围更广泛，不受硬件的局限。

*** 定义格式

ADT /<抽象数据类型名>/ {
    数据对象：/<数据对象的定义>/
    数据关系：/<数据关系的定义>/
    基本操作: /<基本操作的定义>/
}ADT /<抽象数据类型名>/

其中基本操作定义了一组基本操作，每个基本操作都是用伪码表示的，格式为：

/<基本操作名>/ /<参数表>/
    初始条件：/<初始条件描述>/
    操作结果：/<操作结果描述>/

    
    
